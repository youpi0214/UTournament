name: CI

on:
  push:
    branches:
      - main
      - experimental
      - "tp*"
  pull_request:
    branches:
      - main
      - experimental

jobs:
  setup_env:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '21'
          cache: 'maven'

  validate_formatting:
    runs-on: ubuntu-latest
    needs: [ setup_env ]

    steps:
      - name: Check code formatting
        run: mvn formatter:validate
        continue-on-error: false

  compile:
    runs-on: ubuntu-latest
    needs: [ validate_formatting ]

    steps:
      - name: Compile code base
        run: mvn compile
        continue-on-error: false

  run_tests:
    runs-on: ubuntu-latest
    needs: [ compile ]

    steps:
      - name: Run tests
        run: mvn test
        continue-on-error: false

  notify_on_failure_if_pr:
    runs-on: ubuntu-latest
    needs: [ validate_formatting, compile, run_tests ]

    if: always()

    steps:
      - name: Identify failed job
        id: identify_failed_job
        run: |
          if [ "${{ needs.validate_formatting.outputs.formatting_status }}" != "success" ]; then
            echo "validate_formatting"
          elif [ "${{ needs.compile.outputs.compile_status }}" != "success" ]; then
            echo "compile"
          elif [ "${{ needs.run_tests.outputs.test_status }}" != "success" ]; then
            echo "run_tests"
          else
            echo "Unknown"
          fi
        shell: bash

      - name: Send notification
        if: ${{ needs.compile.outputs.compile_status != 'success' || needs.run_tests.outputs.test_status != 'success' || needs.validate_formatting.outputs.formatting_status != 'success' }}
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const { number, pull_request } = context.issue;
            
            if (pull_request) {
            
              let message = '';
              const failedJobs = context.payload.workflow_run.jobs.filter(job => job.conclusion === 'failure');   
            
              if (failedJobs.length > 0) {
                message = 'The following job failed:\n';
                message += `\t- ${failedJobs[0]}\n`;
                message += '\nRemember: always format, compile and test your code before pushing.\nThanks!'
            
            
                const body = {
                  owner,
                  repo,
                  issue_number: number,
                  body: message
                };
            
                await github.rest.issues.createComment(body);
              } 
            }
            
            


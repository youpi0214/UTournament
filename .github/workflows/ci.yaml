name: Development CI

on:
  push:
    branches:
      - "tp*"
  pull_request:
    branches:
      - main
      - experimental

jobs:
  setup_env:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '21'
          cache: 'maven'

  validate_formatting:
    runs-on: ubuntu-latest
    needs: [ setup_env ]

    steps:
      - name: Check code formatting
        run: mvn formatter:validate
        continue-on-error: false

  compile:
    runs-on: ubuntu-latest
    needs: [ validate_formatting ]

    steps:
      - name: Compile code base
        run: mvn compile
        continue-on-error: false

  run_tests:
    runs-on: ubuntu-latest
    needs: [ compile ]

    steps:
      - name: Run tests
        run: mvn test
        continue-on-error: false

  notify:
    runs-on: ubuntu-latest
    needs: [ validate_formatting, compile, run_tests ]

    if: always()

    steps:
      - name: Send notification
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.issue;
            
            let message = '';
            const failedJobs = workflow.jobs.filter(job => job.conclusion === 'failure');
            message += `üö® CI failed job ${failedJobs.length}\n\n`;
            
            if (failedJobs.length > 0) {
              const failedJob = failedJobs[0]; // only one job can fail since we have continue-on-error: false
              message = `‚ùå ${failedJob.name} failed`;
            
            message += '\n\nRemember: always format, compile and test your code before pushing.\nThanks!';
            
            const body = {
              owner,
              repo,
              issue_number: number,
              body: message
            };
            
            await github.rest.issues.createComment(body);
            }
